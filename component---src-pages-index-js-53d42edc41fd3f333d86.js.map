{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/_shared/Header/header.js","webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["StaticQueryContext","loader","enqueue","React","createContext","StaticQueryDataRenderer","staticQueryData","data","query","render","finalData","Fragment","StaticQuery","props","children","Consumer","className","style","title","site","siteMetadata","siteTitle","Header","header","console","log","allData","allMarkdownRemark","edges","map","node","key","id","frontmatter","opacity","date","excerpt","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json"],"mappings":"uIAgBMA,G,8BAFmBC,QAAOC,QAELC,IAAMC,cAAc,KAE/C,SAASC,EAAT,GAA4E,IAAzCC,EAAwC,EAAxCA,gBAAiBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,OACzDC,EAAYH,EACdA,EAAKA,KACLD,EAAgBE,IAAUF,EAAgBE,GAAOD,KAErD,OACE,kBAAC,IAAMI,SAAP,KACGD,GAAaD,EAAOC,IACnBA,GAAa,uDAKrB,IAAME,EAAc,SAAAC,GAAU,IACpBN,EAAkCM,EAAlCN,KAAMC,EAA4BK,EAA5BL,MAAOC,EAAqBI,EAArBJ,OAAQK,EAAaD,EAAbC,SAE7B,OACE,kBAACd,EAAmBe,SAApB,MACG,SAAAT,GAAe,OACd,kBAACD,EAAD,CACEE,KAAMA,EACNC,MAAOA,EACPC,OAAQA,GAAUK,EAClBR,gBAAiBA,Q,yBC5BrBG,EAAS,SAACF,GAAD,OACX,wBAAIS,UAAWC,IAAMC,OACfX,EAAKY,KAAKC,aAAaC,YAalBC,EAVA,SAAC,GAAD,EAAEf,KAAF,IAAOO,EAAP,EAAOA,SAAP,OACX,yBAAKE,UAAWC,IAAMM,QAClB,kBAAC,EAAD,CACAf,MAjBG,aAkBHC,OAAQA,EAFR,SAICK,ICxBT,sCAIe,sBAAa,IAAXP,EAAU,EAAVA,KACbiB,QAAQC,IAAIlB,GACZ,IAAMmB,EAAUnB,EAAKoB,kBAAkBC,MACvC,OACI,6BACI,kBAAC,EAAD,KACCF,EAAQG,KAAI,gBAAEC,EAAF,EAAEA,KAAF,OACT,yBAAKC,IAAKD,EAAKE,IACX,4BACKF,EAAKG,YAAYf,MADtB,MAC+B,0BAAMD,MAAO,CAACiB,QAAQ,KAAOJ,EAAKG,YAAYE,OAE7E,2BAAIL,EAAKM,gBAXd,IAmBF5B,EAAK,a,qBCvBlB,IAAsB6B,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,UALRH,EAAEI,SAAYJ,G,wFCsBhCK,UAjBU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACpC,OAAKA,EAGEzC,IAAM0C,cAAcC,IAApB,eACLH,WACAC,iBACGA,EAAcG,OALV,O","file":"component---src-pages-index-js-53d42edc41fd3f333d86.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport style from \"./header.module.scss\";\n\nconst query = graphql`\n    query HeaderQuery {\n        site {\n            siteMetadata {\n                siteTitle\n            }\n        }\n    }        \n`\nconst render = (data) => (\n    <h1 className={style.title}>\n        { data.site.siteMetadata.siteTitle }\n    </h1>\n)\nconst Header = ({data,children}) => (\n    <div className={style.header}>\n        <StaticQuery\n        query={query}\n        render={render}\n        />\n        {children}\n    </div>\n);\n\nexport default Header;","import React from \"react\"\nimport Header from \"../components/_shared/Header/header\";\nimport { graphql } from \"gatsby\";\n\nexport default ({data}) => {\n    console.log(data)\n    const allData = data.allMarkdownRemark.edges;\n    return(\n        <div>\n            <Header>\n            {allData.map(({node})=> (\n                <div key={node.id}>\n                    <h2>\n                        {node.frontmatter.title} - <span style={{opacity:0.2}}>{node.frontmatter.date}</span>\n                    </h2>\n                    <p>{node.excerpt}</p>\n                </div>\n                ))\n            }\n            </Header>\n        </div>\n    )\n}\nexport const query = graphql`\nquery {\n  allMarkdownRemark {\n    edges {\n      node {\n        frontmatter {\n          title\n          date(formatString: \"DD/MM/YY\")\n        }\n        excerpt\n        id\n      }\n    }\n  }\n}\n`","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}